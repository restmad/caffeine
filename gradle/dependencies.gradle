/**
 * Defines dependencies and versions shared across modules.
 *
 * Multiple dependencies can be shared under the same name:
 *   spring: [
 *     "org.springframework:spring-core:${versions.spring}",
 *     "org.springframework:spring-jdbc:${versions.spring}"
 *   ]
 *
 * Use DependencyHandler.create for advanced dependency configuration:
 *   dependencies.create("org.springframework:spring-core:3.1") {
 *     // Force a version in case of the conflict
 *     force = true
 *
 *     // Disable all transitive dependencies
 *     transitive = false
 *
 *     // exclude a transitive dependency
 *     exclude module: "org.unwanted:unwantedModule" // by group & name
 *     exclude module: "unwantedModule"              // by artifact name
 *     exclude group:  "org.unwanted'                // by artifact group
 *   }
 *
 * @see http://gradle.org/docs/current/javadoc/org/gradle/api/artifacts/dsl/DependencyHandler.html
 */
ext {
  versions = [
    akka: '2.5.9',
    commonsCompress: '1.16.1',
    commonsLang3: '3.7',
    config: '1.3.3',
    errorProne: '2.2.0',
    fastutil: '8.1.1',
    flipTables: '1.0.2',
    guava: '24.0-jre',
    javapoet: '1.10.0',
    jcache: '1.1.0',
    jsr305: '3.0.2',
    jsr330: '1',
    univocityParsers: '2.5.9',
    ycsb: '1.13.0-RC1',
    xz: '1.8',
  ]
  testVersions = [
    awaitility: '3.0.0',
    easymock: '3.5.1',
    hamcrest: '2.0.0.0',
    jcacheTck: '1.1.0',
    jctools: '2.1.1',
    junit: '4.12',
    mockito: '2.15.0',
    paxExam: '4.11.0',
    testng: '6.14.2',
    truth: '0.24',
  ]
  benchmarkVersions = [
    cache2k: '1.0.2.Final',
    collision: '0.3.3',
    concurrentlinkedhashmap: '1.4.2',
    ehcache2: '2.10.4',
    ehcache3: '3.4.0',
    elasticSearch: '6.2.2',
    expiringMap: '0.5.8',
    jackrabbit: '1.8.2',
    jamm: '0.3.2',
    javaObjectLayout: '0.9',
    jmh: 1.20,
    koloboke: '0.6.8',
    ohc: '0.6.1',
    rapidoid: '5.5.4',
    slf4j: '1.7.25',
    tcache: '1.0.5',
  ]
  pluginVersions = [
    apt: '0.14',
    buildscan: '1.12.1',
    buildscanRecipes: '0.2.3',
    checkstyle: '8.8',
    coveralls: '2.8.2',
    coverity: '1.0.10',
    errorProne: '0.0.13',
    jacoco: '0.8.0',
    jmh: '0.4.5',
    jmhReport: '0.7.0',
    nexus: '2.3.1',
    pmd: '6.0.1',
    propdeps: '0.0.10.RELEASE',
    semanticVersioning: '1.1.0',
    shadow: '2.0.2',
    sonarqube: '2.6.2',
    spotbugs: '3.1.1',
    spotbugsPlugin: '1.6.0',
    stats: '0.2.2',
    versions: '0.17.0',
  ]
  annotationProcessorVersions = [
    nullaway: '0.3.3',
  ]

  libraries = [
    akka: "com.typesafe.akka:akka-actor_2.12:${versions.akka}",
    commonsCompress: "org.apache.commons:commons-compress:${versions.commonsCompress}",
    commonsLang3: "org.apache.commons:commons-lang3:${versions.commonsLang3}",
    config: "com.typesafe:config:${versions.config}",
    errorProneAnnotations: "com.google.errorprone:error_prone_annotations:${versions.errorProne}",
    errorProneCore: "com.google.errorprone:error_prone_core:${versions.errorProne}",
    fastutil: "it.unimi.dsi:fastutil:${versions.fastutil}",
    flipTables: "com.jakewharton.fliptables:fliptables:${versions.flipTables}",
    guava: "com.google.guava:guava:${versions.guava}",
    javapoet: "com.squareup:javapoet:${versions.javapoet}",
    jcache: "javax.cache:cache-api:${versions.jcache}",
    jsr305: "com.google.code.findbugs:jsr305:${versions.jsr305}",
    jsr330: "javax.inject:javax.inject:${versions.jsr330}",
    univocityParsers: "com.univocity:univocity-parsers:${versions.univocityParsers}",
    ycsb: "com.github.brianfrankcooper.ycsb:core:${versions.ycsb}",
    xz: "org.tukaani:xz:${versions.xz}",
  ]
  testLibraries = [
    awaitility: dependencies.create("org.awaitility:awaitility:${testVersions.awaitility}") {
      exclude group: 'org.hamcrest'
    },
    easymock: "org.easymock:easymock:${testVersions.easymock}",
    guavaTestLib: dependencies.create("com.google.guava:guava-testlib:${versions.guava}") {
      exclude group: 'com.google.truth'
      exclude group: 'junit'
    },
    hamcrest: "org.hamcrest:java-hamcrest:${testVersions.hamcrest}",
    jcacheGuice: "org.jsr107.ri:cache-annotations-ri-guice:${versions.jcache}",
    jcacheTck: "javax.cache:cache-tests:${testVersions.jcacheTck}",
    jcacheTckTests: "javax.cache:cache-tests:${testVersions.jcacheTck}:tests",
    jctools: "org.jctools:jctools-core:${testVersions.jctools}",
    junit: "junit:junit:${testVersions.junit}",
    mockito: dependencies.create("org.mockito:mockito-core:${testVersions.mockito}") {
      exclude group: 'org.hamcrest'
    },
    osgiCompile: [
      'org.apache.felix:org.apache.felix.framework:5.6.10',
      "org.ops4j.pax.exam:pax-exam-junit4:${testVersions.paxExam}",
    ],
    osgiRuntime: [
      "org.ops4j.pax.exam:pax-exam-container-native:${testVersions.paxExam}",
      "org.ops4j.pax.exam:pax-exam-link-mvn:${testVersions.paxExam}",
      "org.ops4j.pax.url:pax-url-aether:2.5.4",
    ],
    testng: [
      dependencies.create("org.testng:testng:${testVersions.testng}") {
        exclude group: 'junit'
        exclude group: 'guice'
      },
      'com.google.inject:guice:4.1.0'
    ],
    truth: "com.google.truth:truth:${testVersions.truth}",
  ]
  benchmarkLibraries = [
    cache2k: "org.cache2k:cache2k-core:${benchmarkVersions.cache2k}",
    collision: "systems.comodal:collision:${benchmarkVersions.collision}",
    concurrentlinkedhashmap: "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:${benchmarkVersions.concurrentlinkedhashmap}",
    ehcache2: "net.sf.ehcache:ehcache:${benchmarkVersions.ehcache2}",
    ehcache3: "org.ehcache:ehcache:${benchmarkVersions.ehcache3}",
    elasticSearch: dependencies.create("org.elasticsearch:elasticsearch:${benchmarkVersions.elasticSearch}") {
      exclude group: 'org.apache.lucene'
    },
    expiringMap: "net.jodah:expiringmap:${benchmarkVersions.expiringMap}",
    jackrabbit: dependencies.create("org.apache.jackrabbit:oak-core:${benchmarkVersions.jackrabbit}") {
      exclude group: 'junit'
    },
    jamm: "com.github.jbellis:jamm:${benchmarkVersions.jamm}",
    javaObjectLayout: "org.openjdk.jol:jol-cli:${benchmarkVersions.javaObjectLayout}",
    koloboke: [
      "net.openhft:koloboke-api-jdk8:${benchmarkVersions.koloboke}",
      "net.openhft:koloboke-impl-jdk8:${benchmarkVersions.koloboke}",
    ],
    ohc: "org.caffinitas.ohc:ohc-core-j8:${benchmarkVersions.ohc}",
    rapidoid: "org.rapidoid:rapidoid-commons:${benchmarkVersions.rapidoid}",
    slf4jNop: "org.slf4j:slf4j-nop:${benchmarkVersions.slf4j}",
    tcache: "com.trivago:triava:${benchmarkVersions.tcache}",
  ]
  gradlePlugins = [
    apt: "net.ltgt.gradle:gradle-apt-plugin:${pluginVersions.apt}",
    buildscan: "com.gradle:build-scan-plugin:${pluginVersions.buildscan}",
    buildscanRecipes: "me.champeau.gradle:buildscan-recipes-plugin:${pluginVersions.buildscanRecipes}",
    checkstyle: dependencies.create("com.puppycrawl.tools:checkstyle:${pluginVersions.checkstyle}") {
      transitive = false
    },
    coveralls: "org.kt3k.gradle.plugin:coveralls-gradle-plugin:${pluginVersions.coveralls}",
    coverity: "gradle.plugin.com.github.mjdetullio.gradle:coverity-plugin:${pluginVersions.coverity}",
    errorProne: "net.ltgt.gradle:gradle-errorprone-plugin:${pluginVersions.errorProne}",
    jmh: [
      "me.champeau.gradle:jmh-gradle-plugin:${pluginVersions.jmh}",
      "org.openjdk.jmh:jmh-core:${benchmarkVersions.jmh}",
    ],
    jmhReport: "gradle.plugin.io.morethan.jmhreport:gradle-jmh-report:${pluginVersions.jmhReport}",
    nexus: "com.bmuschko:gradle-nexus-plugin:${pluginVersions.nexus}",
    propdeps: "io.spring.gradle:propdeps-plugin:${pluginVersions.propdeps}",
    semanticVersioning: "io.ehdev:gradle-semantic-versioning:${pluginVersions.semanticVersioning}",
    shadow: "com.github.jengelman.gradle.plugins:shadow:${pluginVersions.shadow}",
    sonarqube: "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${pluginVersions.sonarqube}",
    spotbugs: "gradle.plugin.com.github.spotbugs:gradlePlugin:${pluginVersions.spotbugsPlugin}",
    stats: "org.kordamp.gradle:stats-gradle-plugin:${pluginVersions.stats}",
    versions: "com.github.ben-manes:gradle-versions-plugin:${pluginVersions.versions}",
  ]
  annotationProcessors = [
    nullaway: "com.uber.nullaway:nullaway:${annotationProcessorVersions.nullaway}",
  ]
}
